// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RepairCodeProto.proto

package com.centling.protobuf;

public final class RepairCodeProto {
  private RepairCodeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface CtnRepairCodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bean.CtnRepairCode)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    java.util.List<com.centling.protobuf.RepairCodeProto.DctnBrokenCD> 
        getBrokencdList();
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    com.centling.protobuf.RepairCodeProto.DctnBrokenCD getBrokencd(int index);
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    int getBrokencdCount();

    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    java.util.List<com.centling.protobuf.RepairCodeProto.DctnRepairCD> 
        getRepaircdList();
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    com.centling.protobuf.RepairCodeProto.DctnRepairCD getRepaircd(int index);
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    int getRepaircdCount();

    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    java.util.List<com.centling.protobuf.RepairCodeProto.DctnScdmtp> 
        getScdmtpList();
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    com.centling.protobuf.RepairCodeProto.DctnScdmtp getScdmtp(int index);
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    int getScdmtpCount();

    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    java.util.List<com.centling.protobuf.RepairCodeProto.DCtnPartCD> 
        getPartcdList();
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    com.centling.protobuf.RepairCodeProto.DCtnPartCD getPartcd(int index);
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    int getPartcdCount();

    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    java.util.List<com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD> 
        getColdpartcdList();
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD getColdpartcd(int index);
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    int getColdpartcdCount();

    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    java.util.List<com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD> 
        getColdrepaircdList();
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD getColdrepaircd(int index);
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    int getColdrepaircdCount();

    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    java.util.List<com.centling.protobuf.RepairCodeProto.DctnScdmtpNM> 
        getScdmtpnameList();
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    com.centling.protobuf.RepairCodeProto.DctnScdmtpNM getScdmtpname(int index);
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    int getScdmtpnameCount();
  }
  /**
   * Protobuf type {@code bean.CtnRepairCode}
   */
  public  static final class CtnRepairCode extends
      com.google.protobuf.GeneratedMessageLite<
          CtnRepairCode, CtnRepairCode.Builder> implements
      // @@protoc_insertion_point(message_implements:bean.CtnRepairCode)
      CtnRepairCodeOrBuilder {
    private CtnRepairCode() {
      brokencd_ = emptyProtobufList();
      repaircd_ = emptyProtobufList();
      scdmtp_ = emptyProtobufList();
      partcd_ = emptyProtobufList();
      coldpartcd_ = emptyProtobufList();
      coldrepaircd_ = emptyProtobufList();
      scdmtpname_ = emptyProtobufList();
    }
    public static final int BROKENCD_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.centling.protobuf.RepairCodeProto.DctnBrokenCD> brokencd_;
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    public java.util.List<com.centling.protobuf.RepairCodeProto.DctnBrokenCD> getBrokencdList() {
      return brokencd_;
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    public java.util.List<? extends com.centling.protobuf.RepairCodeProto.DctnBrokenCDOrBuilder> 
        getBrokencdOrBuilderList() {
      return brokencd_;
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    public int getBrokencdCount() {
      return brokencd_.size();
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DctnBrokenCD getBrokencd(int index) {
      return brokencd_.get(index);
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DctnBrokenCDOrBuilder getBrokencdOrBuilder(
        int index) {
      return brokencd_.get(index);
    }
    private void ensureBrokencdIsMutable() {
      if (!brokencd_.isModifiable()) {
        brokencd_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(brokencd_);
       }
    }

    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void setBrokencd(
        int index, com.centling.protobuf.RepairCodeProto.DctnBrokenCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBrokencdIsMutable();
      brokencd_.set(index, value);
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void setBrokencd(
        int index, com.centling.protobuf.RepairCodeProto.DctnBrokenCD.Builder builderForValue) {
      ensureBrokencdIsMutable();
      brokencd_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void addBrokencd(com.centling.protobuf.RepairCodeProto.DctnBrokenCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBrokencdIsMutable();
      brokencd_.add(value);
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void addBrokencd(
        int index, com.centling.protobuf.RepairCodeProto.DctnBrokenCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBrokencdIsMutable();
      brokencd_.add(index, value);
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void addBrokencd(
        com.centling.protobuf.RepairCodeProto.DctnBrokenCD.Builder builderForValue) {
      ensureBrokencdIsMutable();
      brokencd_.add(builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void addBrokencd(
        int index, com.centling.protobuf.RepairCodeProto.DctnBrokenCD.Builder builderForValue) {
      ensureBrokencdIsMutable();
      brokencd_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void addAllBrokencd(
        java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DctnBrokenCD> values) {
      ensureBrokencdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, brokencd_);
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void clearBrokencd() {
      brokencd_ = emptyProtobufList();
    }
    /**
     * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
     */
    private void removeBrokencd(int index) {
      ensureBrokencdIsMutable();
      brokencd_.remove(index);
    }

    public static final int REPAIRCD_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.centling.protobuf.RepairCodeProto.DctnRepairCD> repaircd_;
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    public java.util.List<com.centling.protobuf.RepairCodeProto.DctnRepairCD> getRepaircdList() {
      return repaircd_;
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    public java.util.List<? extends com.centling.protobuf.RepairCodeProto.DctnRepairCDOrBuilder> 
        getRepaircdOrBuilderList() {
      return repaircd_;
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    public int getRepaircdCount() {
      return repaircd_.size();
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DctnRepairCD getRepaircd(int index) {
      return repaircd_.get(index);
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DctnRepairCDOrBuilder getRepaircdOrBuilder(
        int index) {
      return repaircd_.get(index);
    }
    private void ensureRepaircdIsMutable() {
      if (!repaircd_.isModifiable()) {
        repaircd_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(repaircd_);
       }
    }

    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void setRepaircd(
        int index, com.centling.protobuf.RepairCodeProto.DctnRepairCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRepaircdIsMutable();
      repaircd_.set(index, value);
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void setRepaircd(
        int index, com.centling.protobuf.RepairCodeProto.DctnRepairCD.Builder builderForValue) {
      ensureRepaircdIsMutable();
      repaircd_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void addRepaircd(com.centling.protobuf.RepairCodeProto.DctnRepairCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRepaircdIsMutable();
      repaircd_.add(value);
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void addRepaircd(
        int index, com.centling.protobuf.RepairCodeProto.DctnRepairCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRepaircdIsMutable();
      repaircd_.add(index, value);
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void addRepaircd(
        com.centling.protobuf.RepairCodeProto.DctnRepairCD.Builder builderForValue) {
      ensureRepaircdIsMutable();
      repaircd_.add(builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void addRepaircd(
        int index, com.centling.protobuf.RepairCodeProto.DctnRepairCD.Builder builderForValue) {
      ensureRepaircdIsMutable();
      repaircd_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void addAllRepaircd(
        java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DctnRepairCD> values) {
      ensureRepaircdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, repaircd_);
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void clearRepaircd() {
      repaircd_ = emptyProtobufList();
    }
    /**
     * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
     */
    private void removeRepaircd(int index) {
      ensureRepaircdIsMutable();
      repaircd_.remove(index);
    }

    public static final int SCDMTP_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.centling.protobuf.RepairCodeProto.DctnScdmtp> scdmtp_;
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    public java.util.List<com.centling.protobuf.RepairCodeProto.DctnScdmtp> getScdmtpList() {
      return scdmtp_;
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    public java.util.List<? extends com.centling.protobuf.RepairCodeProto.DctnScdmtpOrBuilder> 
        getScdmtpOrBuilderList() {
      return scdmtp_;
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    public int getScdmtpCount() {
      return scdmtp_.size();
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DctnScdmtp getScdmtp(int index) {
      return scdmtp_.get(index);
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DctnScdmtpOrBuilder getScdmtpOrBuilder(
        int index) {
      return scdmtp_.get(index);
    }
    private void ensureScdmtpIsMutable() {
      if (!scdmtp_.isModifiable()) {
        scdmtp_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(scdmtp_);
       }
    }

    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void setScdmtp(
        int index, com.centling.protobuf.RepairCodeProto.DctnScdmtp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureScdmtpIsMutable();
      scdmtp_.set(index, value);
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void setScdmtp(
        int index, com.centling.protobuf.RepairCodeProto.DctnScdmtp.Builder builderForValue) {
      ensureScdmtpIsMutable();
      scdmtp_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void addScdmtp(com.centling.protobuf.RepairCodeProto.DctnScdmtp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureScdmtpIsMutable();
      scdmtp_.add(value);
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void addScdmtp(
        int index, com.centling.protobuf.RepairCodeProto.DctnScdmtp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureScdmtpIsMutable();
      scdmtp_.add(index, value);
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void addScdmtp(
        com.centling.protobuf.RepairCodeProto.DctnScdmtp.Builder builderForValue) {
      ensureScdmtpIsMutable();
      scdmtp_.add(builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void addScdmtp(
        int index, com.centling.protobuf.RepairCodeProto.DctnScdmtp.Builder builderForValue) {
      ensureScdmtpIsMutable();
      scdmtp_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void addAllScdmtp(
        java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DctnScdmtp> values) {
      ensureScdmtpIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, scdmtp_);
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void clearScdmtp() {
      scdmtp_ = emptyProtobufList();
    }
    /**
     * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
     */
    private void removeScdmtp(int index) {
      ensureScdmtpIsMutable();
      scdmtp_.remove(index);
    }

    public static final int PARTCD_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.centling.protobuf.RepairCodeProto.DCtnPartCD> partcd_;
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    public java.util.List<com.centling.protobuf.RepairCodeProto.DCtnPartCD> getPartcdList() {
      return partcd_;
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    public java.util.List<? extends com.centling.protobuf.RepairCodeProto.DCtnPartCDOrBuilder> 
        getPartcdOrBuilderList() {
      return partcd_;
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    public int getPartcdCount() {
      return partcd_.size();
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DCtnPartCD getPartcd(int index) {
      return partcd_.get(index);
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DCtnPartCDOrBuilder getPartcdOrBuilder(
        int index) {
      return partcd_.get(index);
    }
    private void ensurePartcdIsMutable() {
      if (!partcd_.isModifiable()) {
        partcd_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(partcd_);
       }
    }

    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void setPartcd(
        int index, com.centling.protobuf.RepairCodeProto.DCtnPartCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePartcdIsMutable();
      partcd_.set(index, value);
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void setPartcd(
        int index, com.centling.protobuf.RepairCodeProto.DCtnPartCD.Builder builderForValue) {
      ensurePartcdIsMutable();
      partcd_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void addPartcd(com.centling.protobuf.RepairCodeProto.DCtnPartCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePartcdIsMutable();
      partcd_.add(value);
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void addPartcd(
        int index, com.centling.protobuf.RepairCodeProto.DCtnPartCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePartcdIsMutable();
      partcd_.add(index, value);
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void addPartcd(
        com.centling.protobuf.RepairCodeProto.DCtnPartCD.Builder builderForValue) {
      ensurePartcdIsMutable();
      partcd_.add(builderForValue.build());
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void addPartcd(
        int index, com.centling.protobuf.RepairCodeProto.DCtnPartCD.Builder builderForValue) {
      ensurePartcdIsMutable();
      partcd_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void addAllPartcd(
        java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DCtnPartCD> values) {
      ensurePartcdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, partcd_);
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void clearPartcd() {
      partcd_ = emptyProtobufList();
    }
    /**
     * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
     */
    private void removePartcd(int index) {
      ensurePartcdIsMutable();
      partcd_.remove(index);
    }

    public static final int COLDPARTCD_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD> coldpartcd_;
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    public java.util.List<com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD> getColdpartcdList() {
      return coldpartcd_;
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    public java.util.List<? extends com.centling.protobuf.RepairCodeProto.DcoldCtnPartCDOrBuilder> 
        getColdpartcdOrBuilderList() {
      return coldpartcd_;
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    public int getColdpartcdCount() {
      return coldpartcd_.size();
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD getColdpartcd(int index) {
      return coldpartcd_.get(index);
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DcoldCtnPartCDOrBuilder getColdpartcdOrBuilder(
        int index) {
      return coldpartcd_.get(index);
    }
    private void ensureColdpartcdIsMutable() {
      if (!coldpartcd_.isModifiable()) {
        coldpartcd_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(coldpartcd_);
       }
    }

    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void setColdpartcd(
        int index, com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColdpartcdIsMutable();
      coldpartcd_.set(index, value);
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void setColdpartcd(
        int index, com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.Builder builderForValue) {
      ensureColdpartcdIsMutable();
      coldpartcd_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void addColdpartcd(com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColdpartcdIsMutable();
      coldpartcd_.add(value);
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void addColdpartcd(
        int index, com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColdpartcdIsMutable();
      coldpartcd_.add(index, value);
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void addColdpartcd(
        com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.Builder builderForValue) {
      ensureColdpartcdIsMutable();
      coldpartcd_.add(builderForValue.build());
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void addColdpartcd(
        int index, com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.Builder builderForValue) {
      ensureColdpartcdIsMutable();
      coldpartcd_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void addAllColdpartcd(
        java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD> values) {
      ensureColdpartcdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, coldpartcd_);
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void clearColdpartcd() {
      coldpartcd_ = emptyProtobufList();
    }
    /**
     * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
     */
    private void removeColdpartcd(int index) {
      ensureColdpartcdIsMutable();
      coldpartcd_.remove(index);
    }

    public static final int COLDREPAIRCD_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD> coldrepaircd_;
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    public java.util.List<com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD> getColdrepaircdList() {
      return coldrepaircd_;
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    public java.util.List<? extends com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCDOrBuilder> 
        getColdrepaircdOrBuilderList() {
      return coldrepaircd_;
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    public int getColdrepaircdCount() {
      return coldrepaircd_.size();
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD getColdrepaircd(int index) {
      return coldrepaircd_.get(index);
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCDOrBuilder getColdrepaircdOrBuilder(
        int index) {
      return coldrepaircd_.get(index);
    }
    private void ensureColdrepaircdIsMutable() {
      if (!coldrepaircd_.isModifiable()) {
        coldrepaircd_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(coldrepaircd_);
       }
    }

    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void setColdrepaircd(
        int index, com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColdrepaircdIsMutable();
      coldrepaircd_.set(index, value);
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void setColdrepaircd(
        int index, com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.Builder builderForValue) {
      ensureColdrepaircdIsMutable();
      coldrepaircd_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void addColdrepaircd(com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColdrepaircdIsMutable();
      coldrepaircd_.add(value);
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void addColdrepaircd(
        int index, com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColdrepaircdIsMutable();
      coldrepaircd_.add(index, value);
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void addColdrepaircd(
        com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.Builder builderForValue) {
      ensureColdrepaircdIsMutable();
      coldrepaircd_.add(builderForValue.build());
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void addColdrepaircd(
        int index, com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.Builder builderForValue) {
      ensureColdrepaircdIsMutable();
      coldrepaircd_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void addAllColdrepaircd(
        java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD> values) {
      ensureColdrepaircdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, coldrepaircd_);
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void clearColdrepaircd() {
      coldrepaircd_ = emptyProtobufList();
    }
    /**
     * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
     */
    private void removeColdrepaircd(int index) {
      ensureColdrepaircdIsMutable();
      coldrepaircd_.remove(index);
    }

    public static final int SCDMTPNAME_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<com.centling.protobuf.RepairCodeProto.DctnScdmtpNM> scdmtpname_;
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    public java.util.List<com.centling.protobuf.RepairCodeProto.DctnScdmtpNM> getScdmtpnameList() {
      return scdmtpname_;
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    public java.util.List<? extends com.centling.protobuf.RepairCodeProto.DctnScdmtpNMOrBuilder> 
        getScdmtpnameOrBuilderList() {
      return scdmtpname_;
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    public int getScdmtpnameCount() {
      return scdmtpname_.size();
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DctnScdmtpNM getScdmtpname(int index) {
      return scdmtpname_.get(index);
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    public com.centling.protobuf.RepairCodeProto.DctnScdmtpNMOrBuilder getScdmtpnameOrBuilder(
        int index) {
      return scdmtpname_.get(index);
    }
    private void ensureScdmtpnameIsMutable() {
      if (!scdmtpname_.isModifiable()) {
        scdmtpname_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(scdmtpname_);
       }
    }

    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void setScdmtpname(
        int index, com.centling.protobuf.RepairCodeProto.DctnScdmtpNM value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureScdmtpnameIsMutable();
      scdmtpname_.set(index, value);
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void setScdmtpname(
        int index, com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.Builder builderForValue) {
      ensureScdmtpnameIsMutable();
      scdmtpname_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void addScdmtpname(com.centling.protobuf.RepairCodeProto.DctnScdmtpNM value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureScdmtpnameIsMutable();
      scdmtpname_.add(value);
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void addScdmtpname(
        int index, com.centling.protobuf.RepairCodeProto.DctnScdmtpNM value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureScdmtpnameIsMutable();
      scdmtpname_.add(index, value);
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void addScdmtpname(
        com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.Builder builderForValue) {
      ensureScdmtpnameIsMutable();
      scdmtpname_.add(builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void addScdmtpname(
        int index, com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.Builder builderForValue) {
      ensureScdmtpnameIsMutable();
      scdmtpname_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void addAllScdmtpname(
        java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DctnScdmtpNM> values) {
      ensureScdmtpnameIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, scdmtpname_);
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void clearScdmtpname() {
      scdmtpname_ = emptyProtobufList();
    }
    /**
     * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
     */
    private void removeScdmtpname(int index) {
      ensureScdmtpnameIsMutable();
      scdmtpname_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < brokencd_.size(); i++) {
        output.writeMessage(1, brokencd_.get(i));
      }
      for (int i = 0; i < repaircd_.size(); i++) {
        output.writeMessage(2, repaircd_.get(i));
      }
      for (int i = 0; i < scdmtp_.size(); i++) {
        output.writeMessage(3, scdmtp_.get(i));
      }
      for (int i = 0; i < partcd_.size(); i++) {
        output.writeMessage(4, partcd_.get(i));
      }
      for (int i = 0; i < coldpartcd_.size(); i++) {
        output.writeMessage(5, coldpartcd_.get(i));
      }
      for (int i = 0; i < coldrepaircd_.size(); i++) {
        output.writeMessage(6, coldrepaircd_.get(i));
      }
      for (int i = 0; i < scdmtpname_.size(); i++) {
        output.writeMessage(7, scdmtpname_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < brokencd_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, brokencd_.get(i));
      }
      for (int i = 0; i < repaircd_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, repaircd_.get(i));
      }
      for (int i = 0; i < scdmtp_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, scdmtp_.get(i));
      }
      for (int i = 0; i < partcd_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, partcd_.get(i));
      }
      for (int i = 0; i < coldpartcd_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, coldpartcd_.get(i));
      }
      for (int i = 0; i < coldrepaircd_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, coldrepaircd_.get(i));
      }
      for (int i = 0; i < scdmtpname_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, scdmtpname_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.centling.protobuf.RepairCodeProto.CtnRepairCode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code bean.CtnRepairCode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.centling.protobuf.RepairCodeProto.CtnRepairCode, Builder> implements
        // @@protoc_insertion_point(builder_implements:bean.CtnRepairCode)
        com.centling.protobuf.RepairCodeProto.CtnRepairCodeOrBuilder {
      // Construct using com.centling.protobuf.RepairCodeProto.CtnRepairCode.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public java.util.List<com.centling.protobuf.RepairCodeProto.DctnBrokenCD> getBrokencdList() {
        return java.util.Collections.unmodifiableList(
            instance.getBrokencdList());
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public int getBrokencdCount() {
        return instance.getBrokencdCount();
      }/**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public com.centling.protobuf.RepairCodeProto.DctnBrokenCD getBrokencd(int index) {
        return instance.getBrokencd(index);
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder setBrokencd(
          int index, com.centling.protobuf.RepairCodeProto.DctnBrokenCD value) {
        copyOnWrite();
        instance.setBrokencd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder setBrokencd(
          int index, com.centling.protobuf.RepairCodeProto.DctnBrokenCD.Builder builderForValue) {
        copyOnWrite();
        instance.setBrokencd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder addBrokencd(com.centling.protobuf.RepairCodeProto.DctnBrokenCD value) {
        copyOnWrite();
        instance.addBrokencd(value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder addBrokencd(
          int index, com.centling.protobuf.RepairCodeProto.DctnBrokenCD value) {
        copyOnWrite();
        instance.addBrokencd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder addBrokencd(
          com.centling.protobuf.RepairCodeProto.DctnBrokenCD.Builder builderForValue) {
        copyOnWrite();
        instance.addBrokencd(builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder addBrokencd(
          int index, com.centling.protobuf.RepairCodeProto.DctnBrokenCD.Builder builderForValue) {
        copyOnWrite();
        instance.addBrokencd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder addAllBrokencd(
          java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DctnBrokenCD> values) {
        copyOnWrite();
        instance.addAllBrokencd(values);
        return this;
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder clearBrokencd() {
        copyOnWrite();
        instance.clearBrokencd();
        return this;
      }
      /**
       * <code>repeated .bean.DctnBrokenCD brokencd = 1;</code>
       */
      public Builder removeBrokencd(int index) {
        copyOnWrite();
        instance.removeBrokencd(index);
        return this;
      }

      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public java.util.List<com.centling.protobuf.RepairCodeProto.DctnRepairCD> getRepaircdList() {
        return java.util.Collections.unmodifiableList(
            instance.getRepaircdList());
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public int getRepaircdCount() {
        return instance.getRepaircdCount();
      }/**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public com.centling.protobuf.RepairCodeProto.DctnRepairCD getRepaircd(int index) {
        return instance.getRepaircd(index);
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder setRepaircd(
          int index, com.centling.protobuf.RepairCodeProto.DctnRepairCD value) {
        copyOnWrite();
        instance.setRepaircd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder setRepaircd(
          int index, com.centling.protobuf.RepairCodeProto.DctnRepairCD.Builder builderForValue) {
        copyOnWrite();
        instance.setRepaircd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder addRepaircd(com.centling.protobuf.RepairCodeProto.DctnRepairCD value) {
        copyOnWrite();
        instance.addRepaircd(value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder addRepaircd(
          int index, com.centling.protobuf.RepairCodeProto.DctnRepairCD value) {
        copyOnWrite();
        instance.addRepaircd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder addRepaircd(
          com.centling.protobuf.RepairCodeProto.DctnRepairCD.Builder builderForValue) {
        copyOnWrite();
        instance.addRepaircd(builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder addRepaircd(
          int index, com.centling.protobuf.RepairCodeProto.DctnRepairCD.Builder builderForValue) {
        copyOnWrite();
        instance.addRepaircd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder addAllRepaircd(
          java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DctnRepairCD> values) {
        copyOnWrite();
        instance.addAllRepaircd(values);
        return this;
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder clearRepaircd() {
        copyOnWrite();
        instance.clearRepaircd();
        return this;
      }
      /**
       * <code>repeated .bean.DctnRepairCD repaircd = 2;</code>
       */
      public Builder removeRepaircd(int index) {
        copyOnWrite();
        instance.removeRepaircd(index);
        return this;
      }

      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public java.util.List<com.centling.protobuf.RepairCodeProto.DctnScdmtp> getScdmtpList() {
        return java.util.Collections.unmodifiableList(
            instance.getScdmtpList());
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public int getScdmtpCount() {
        return instance.getScdmtpCount();
      }/**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public com.centling.protobuf.RepairCodeProto.DctnScdmtp getScdmtp(int index) {
        return instance.getScdmtp(index);
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder setScdmtp(
          int index, com.centling.protobuf.RepairCodeProto.DctnScdmtp value) {
        copyOnWrite();
        instance.setScdmtp(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder setScdmtp(
          int index, com.centling.protobuf.RepairCodeProto.DctnScdmtp.Builder builderForValue) {
        copyOnWrite();
        instance.setScdmtp(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder addScdmtp(com.centling.protobuf.RepairCodeProto.DctnScdmtp value) {
        copyOnWrite();
        instance.addScdmtp(value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder addScdmtp(
          int index, com.centling.protobuf.RepairCodeProto.DctnScdmtp value) {
        copyOnWrite();
        instance.addScdmtp(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder addScdmtp(
          com.centling.protobuf.RepairCodeProto.DctnScdmtp.Builder builderForValue) {
        copyOnWrite();
        instance.addScdmtp(builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder addScdmtp(
          int index, com.centling.protobuf.RepairCodeProto.DctnScdmtp.Builder builderForValue) {
        copyOnWrite();
        instance.addScdmtp(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder addAllScdmtp(
          java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DctnScdmtp> values) {
        copyOnWrite();
        instance.addAllScdmtp(values);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder clearScdmtp() {
        copyOnWrite();
        instance.clearScdmtp();
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtp scdmtp = 3;</code>
       */
      public Builder removeScdmtp(int index) {
        copyOnWrite();
        instance.removeScdmtp(index);
        return this;
      }

      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public java.util.List<com.centling.protobuf.RepairCodeProto.DCtnPartCD> getPartcdList() {
        return java.util.Collections.unmodifiableList(
            instance.getPartcdList());
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public int getPartcdCount() {
        return instance.getPartcdCount();
      }/**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public com.centling.protobuf.RepairCodeProto.DCtnPartCD getPartcd(int index) {
        return instance.getPartcd(index);
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder setPartcd(
          int index, com.centling.protobuf.RepairCodeProto.DCtnPartCD value) {
        copyOnWrite();
        instance.setPartcd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder setPartcd(
          int index, com.centling.protobuf.RepairCodeProto.DCtnPartCD.Builder builderForValue) {
        copyOnWrite();
        instance.setPartcd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder addPartcd(com.centling.protobuf.RepairCodeProto.DCtnPartCD value) {
        copyOnWrite();
        instance.addPartcd(value);
        return this;
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder addPartcd(
          int index, com.centling.protobuf.RepairCodeProto.DCtnPartCD value) {
        copyOnWrite();
        instance.addPartcd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder addPartcd(
          com.centling.protobuf.RepairCodeProto.DCtnPartCD.Builder builderForValue) {
        copyOnWrite();
        instance.addPartcd(builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder addPartcd(
          int index, com.centling.protobuf.RepairCodeProto.DCtnPartCD.Builder builderForValue) {
        copyOnWrite();
        instance.addPartcd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder addAllPartcd(
          java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DCtnPartCD> values) {
        copyOnWrite();
        instance.addAllPartcd(values);
        return this;
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder clearPartcd() {
        copyOnWrite();
        instance.clearPartcd();
        return this;
      }
      /**
       * <code>repeated .bean.DCtnPartCD partcd = 4;</code>
       */
      public Builder removePartcd(int index) {
        copyOnWrite();
        instance.removePartcd(index);
        return this;
      }

      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public java.util.List<com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD> getColdpartcdList() {
        return java.util.Collections.unmodifiableList(
            instance.getColdpartcdList());
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public int getColdpartcdCount() {
        return instance.getColdpartcdCount();
      }/**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD getColdpartcd(int index) {
        return instance.getColdpartcd(index);
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder setColdpartcd(
          int index, com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD value) {
        copyOnWrite();
        instance.setColdpartcd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder setColdpartcd(
          int index, com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.Builder builderForValue) {
        copyOnWrite();
        instance.setColdpartcd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder addColdpartcd(com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD value) {
        copyOnWrite();
        instance.addColdpartcd(value);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder addColdpartcd(
          int index, com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD value) {
        copyOnWrite();
        instance.addColdpartcd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder addColdpartcd(
          com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.Builder builderForValue) {
        copyOnWrite();
        instance.addColdpartcd(builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder addColdpartcd(
          int index, com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.Builder builderForValue) {
        copyOnWrite();
        instance.addColdpartcd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder addAllColdpartcd(
          java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD> values) {
        copyOnWrite();
        instance.addAllColdpartcd(values);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder clearColdpartcd() {
        copyOnWrite();
        instance.clearColdpartcd();
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnPartCD coldpartcd = 5;</code>
       */
      public Builder removeColdpartcd(int index) {
        copyOnWrite();
        instance.removeColdpartcd(index);
        return this;
      }

      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public java.util.List<com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD> getColdrepaircdList() {
        return java.util.Collections.unmodifiableList(
            instance.getColdrepaircdList());
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public int getColdrepaircdCount() {
        return instance.getColdrepaircdCount();
      }/**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD getColdrepaircd(int index) {
        return instance.getColdrepaircd(index);
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder setColdrepaircd(
          int index, com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD value) {
        copyOnWrite();
        instance.setColdrepaircd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder setColdrepaircd(
          int index, com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.Builder builderForValue) {
        copyOnWrite();
        instance.setColdrepaircd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder addColdrepaircd(com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD value) {
        copyOnWrite();
        instance.addColdrepaircd(value);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder addColdrepaircd(
          int index, com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD value) {
        copyOnWrite();
        instance.addColdrepaircd(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder addColdrepaircd(
          com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.Builder builderForValue) {
        copyOnWrite();
        instance.addColdrepaircd(builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder addColdrepaircd(
          int index, com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.Builder builderForValue) {
        copyOnWrite();
        instance.addColdrepaircd(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder addAllColdrepaircd(
          java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD> values) {
        copyOnWrite();
        instance.addAllColdrepaircd(values);
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder clearColdrepaircd() {
        copyOnWrite();
        instance.clearColdrepaircd();
        return this;
      }
      /**
       * <code>repeated .bean.DcoldCtnRepairCD coldrepaircd = 6;</code>
       */
      public Builder removeColdrepaircd(int index) {
        copyOnWrite();
        instance.removeColdrepaircd(index);
        return this;
      }

      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public java.util.List<com.centling.protobuf.RepairCodeProto.DctnScdmtpNM> getScdmtpnameList() {
        return java.util.Collections.unmodifiableList(
            instance.getScdmtpnameList());
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public int getScdmtpnameCount() {
        return instance.getScdmtpnameCount();
      }/**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public com.centling.protobuf.RepairCodeProto.DctnScdmtpNM getScdmtpname(int index) {
        return instance.getScdmtpname(index);
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder setScdmtpname(
          int index, com.centling.protobuf.RepairCodeProto.DctnScdmtpNM value) {
        copyOnWrite();
        instance.setScdmtpname(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder setScdmtpname(
          int index, com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.Builder builderForValue) {
        copyOnWrite();
        instance.setScdmtpname(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder addScdmtpname(com.centling.protobuf.RepairCodeProto.DctnScdmtpNM value) {
        copyOnWrite();
        instance.addScdmtpname(value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder addScdmtpname(
          int index, com.centling.protobuf.RepairCodeProto.DctnScdmtpNM value) {
        copyOnWrite();
        instance.addScdmtpname(index, value);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder addScdmtpname(
          com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.Builder builderForValue) {
        copyOnWrite();
        instance.addScdmtpname(builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder addScdmtpname(
          int index, com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.Builder builderForValue) {
        copyOnWrite();
        instance.addScdmtpname(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder addAllScdmtpname(
          java.lang.Iterable<? extends com.centling.protobuf.RepairCodeProto.DctnScdmtpNM> values) {
        copyOnWrite();
        instance.addAllScdmtpname(values);
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder clearScdmtpname() {
        copyOnWrite();
        instance.clearScdmtpname();
        return this;
      }
      /**
       * <code>repeated .bean.DctnScdmtpNM scdmtpname = 7;</code>
       */
      public Builder removeScdmtpname(int index) {
        copyOnWrite();
        instance.removeScdmtpname(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bean.CtnRepairCode)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.centling.protobuf.RepairCodeProto.CtnRepairCode();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          brokencd_.makeImmutable();
          repaircd_.makeImmutable();
          scdmtp_.makeImmutable();
          partcd_.makeImmutable();
          coldpartcd_.makeImmutable();
          coldrepaircd_.makeImmutable();
          scdmtpname_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.centling.protobuf.RepairCodeProto.CtnRepairCode other = (com.centling.protobuf.RepairCodeProto.CtnRepairCode) arg1;
          brokencd_= visitor.visitList(brokencd_, other.brokencd_);
          repaircd_= visitor.visitList(repaircd_, other.repaircd_);
          scdmtp_= visitor.visitList(scdmtp_, other.scdmtp_);
          partcd_= visitor.visitList(partcd_, other.partcd_);
          coldpartcd_= visitor.visitList(coldpartcd_, other.coldpartcd_);
          coldrepaircd_= visitor.visitList(coldrepaircd_, other.coldrepaircd_);
          scdmtpname_= visitor.visitList(scdmtpname_, other.scdmtpname_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!brokencd_.isModifiable()) {
                    brokencd_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(brokencd_);
                  }
                  brokencd_.add(
                      input.readMessage(com.centling.protobuf.RepairCodeProto.DctnBrokenCD.parser(), extensionRegistry));
                  break;
                }
                case 18: {
                  if (!repaircd_.isModifiable()) {
                    repaircd_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(repaircd_);
                  }
                  repaircd_.add(
                      input.readMessage(com.centling.protobuf.RepairCodeProto.DctnRepairCD.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  if (!scdmtp_.isModifiable()) {
                    scdmtp_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(scdmtp_);
                  }
                  scdmtp_.add(
                      input.readMessage(com.centling.protobuf.RepairCodeProto.DctnScdmtp.parser(), extensionRegistry));
                  break;
                }
                case 34: {
                  if (!partcd_.isModifiable()) {
                    partcd_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(partcd_);
                  }
                  partcd_.add(
                      input.readMessage(com.centling.protobuf.RepairCodeProto.DCtnPartCD.parser(), extensionRegistry));
                  break;
                }
                case 42: {
                  if (!coldpartcd_.isModifiable()) {
                    coldpartcd_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(coldpartcd_);
                  }
                  coldpartcd_.add(
                      input.readMessage(com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.parser(), extensionRegistry));
                  break;
                }
                case 50: {
                  if (!coldrepaircd_.isModifiable()) {
                    coldrepaircd_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(coldrepaircd_);
                  }
                  coldrepaircd_.add(
                      input.readMessage(com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.parser(), extensionRegistry));
                  break;
                }
                case 58: {
                  if (!scdmtpname_.isModifiable()) {
                    scdmtpname_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(scdmtpname_);
                  }
                  scdmtpname_.add(
                      input.readMessage(com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.centling.protobuf.RepairCodeProto.CtnRepairCode.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:bean.CtnRepairCode)
    private static final com.centling.protobuf.RepairCodeProto.CtnRepairCode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CtnRepairCode();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.centling.protobuf.RepairCodeProto.CtnRepairCode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CtnRepairCode> PARSER;

    public static com.google.protobuf.Parser<CtnRepairCode> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DctnBrokenCDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bean.DctnBrokenCD)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string brokencd = 1;</code>
     */
    boolean hasBrokencd();
    /**
     * <code>optional string brokencd = 1;</code>
     */
    java.lang.String getBrokencd();
    /**
     * <code>optional string brokencd = 1;</code>
     */
    com.google.protobuf.ByteString
        getBrokencdBytes();
  }
  /**
   * Protobuf type {@code bean.DctnBrokenCD}
   */
  public  static final class DctnBrokenCD extends
      com.google.protobuf.GeneratedMessageLite<
          DctnBrokenCD, DctnBrokenCD.Builder> implements
      // @@protoc_insertion_point(message_implements:bean.DctnBrokenCD)
      DctnBrokenCDOrBuilder {
    private DctnBrokenCD() {
      brokencd_ = "";
    }
    private int bitField0_;
    public static final int BROKENCD_FIELD_NUMBER = 1;
    private java.lang.String brokencd_;
    /**
     * <code>optional string brokencd = 1;</code>
     */
    public boolean hasBrokencd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string brokencd = 1;</code>
     */
    public java.lang.String getBrokencd() {
      return brokencd_;
    }
    /**
     * <code>optional string brokencd = 1;</code>
     */
    public com.google.protobuf.ByteString
        getBrokencdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(brokencd_);
    }
    /**
     * <code>optional string brokencd = 1;</code>
     */
    private void setBrokencd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      brokencd_ = value;
    }
    /**
     * <code>optional string brokencd = 1;</code>
     */
    private void clearBrokencd() {
      bitField0_ = (bitField0_ & ~0x00000001);
      brokencd_ = getDefaultInstance().getBrokencd();
    }
    /**
     * <code>optional string brokencd = 1;</code>
     */
    private void setBrokencdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      brokencd_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getBrokencd());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getBrokencd());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.centling.protobuf.RepairCodeProto.DctnBrokenCD prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code bean.DctnBrokenCD}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.centling.protobuf.RepairCodeProto.DctnBrokenCD, Builder> implements
        // @@protoc_insertion_point(builder_implements:bean.DctnBrokenCD)
        com.centling.protobuf.RepairCodeProto.DctnBrokenCDOrBuilder {
      // Construct using com.centling.protobuf.RepairCodeProto.DctnBrokenCD.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string brokencd = 1;</code>
       */
      public boolean hasBrokencd() {
        return instance.hasBrokencd();
      }
      /**
       * <code>optional string brokencd = 1;</code>
       */
      public java.lang.String getBrokencd() {
        return instance.getBrokencd();
      }
      /**
       * <code>optional string brokencd = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBrokencdBytes() {
        return instance.getBrokencdBytes();
      }
      /**
       * <code>optional string brokencd = 1;</code>
       */
      public Builder setBrokencd(
          java.lang.String value) {
        copyOnWrite();
        instance.setBrokencd(value);
        return this;
      }
      /**
       * <code>optional string brokencd = 1;</code>
       */
      public Builder clearBrokencd() {
        copyOnWrite();
        instance.clearBrokencd();
        return this;
      }
      /**
       * <code>optional string brokencd = 1;</code>
       */
      public Builder setBrokencdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setBrokencdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bean.DctnBrokenCD)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.centling.protobuf.RepairCodeProto.DctnBrokenCD();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.centling.protobuf.RepairCodeProto.DctnBrokenCD other = (com.centling.protobuf.RepairCodeProto.DctnBrokenCD) arg1;
          brokencd_ = visitor.visitString(
              hasBrokencd(), brokencd_,
              other.hasBrokencd(), other.brokencd_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  brokencd_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.centling.protobuf.RepairCodeProto.DctnBrokenCD.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:bean.DctnBrokenCD)
    private static final com.centling.protobuf.RepairCodeProto.DctnBrokenCD DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DctnBrokenCD();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.centling.protobuf.RepairCodeProto.DctnBrokenCD getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DctnBrokenCD> PARSER;

    public static com.google.protobuf.Parser<DctnBrokenCD> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DctnRepairCDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bean.DctnRepairCD)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string partcd = 1;</code>
     */
    boolean hasPartcd();
    /**
     * <code>optional string partcd = 1;</code>
     */
    java.lang.String getPartcd();
    /**
     * <code>optional string partcd = 1;</code>
     */
    com.google.protobuf.ByteString
        getPartcdBytes();

    /**
     * <code>optional string dtprcd = 2;</code>
     */
    boolean hasDtprcd();
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    java.lang.String getDtprcd();
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    com.google.protobuf.ByteString
        getDtprcdBytes();

    /**
     * <code>optional string positioncd = 3;</code>
     */
    boolean hasPositioncd();
    /**
     * <code>optional string positioncd = 3;</code>
     */
    java.lang.String getPositioncd();
    /**
     * <code>optional string positioncd = 3;</code>
     */
    com.google.protobuf.ByteString
        getPositioncdBytes();

    /**
     * <code>optional string ifparm = 4;</code>
     */
    boolean hasIfparm();
    /**
     * <code>optional string ifparm = 4;</code>
     */
    java.lang.String getIfparm();
    /**
     * <code>optional string ifparm = 4;</code>
     */
    com.google.protobuf.ByteString
        getIfparmBytes();

    /**
     * <code>optional string ctnope = 5;</code>
     */
    boolean hasCtnope();
    /**
     * <code>optional string ctnope = 5;</code>
     */
    java.lang.String getCtnope();
    /**
     * <code>optional string ctnope = 5;</code>
     */
    com.google.protobuf.ByteString
        getCtnopeBytes();
  }
  /**
   * Protobuf type {@code bean.DctnRepairCD}
   */
  public  static final class DctnRepairCD extends
      com.google.protobuf.GeneratedMessageLite<
          DctnRepairCD, DctnRepairCD.Builder> implements
      // @@protoc_insertion_point(message_implements:bean.DctnRepairCD)
      DctnRepairCDOrBuilder {
    private DctnRepairCD() {
      partcd_ = "";
      dtprcd_ = "";
      positioncd_ = "";
      ifparm_ = "";
      ctnope_ = "";
    }
    private int bitField0_;
    public static final int PARTCD_FIELD_NUMBER = 1;
    private java.lang.String partcd_;
    /**
     * <code>optional string partcd = 1;</code>
     */
    public boolean hasPartcd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    public java.lang.String getPartcd() {
      return partcd_;
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPartcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(partcd_);
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void setPartcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      partcd_ = value;
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void clearPartcd() {
      bitField0_ = (bitField0_ & ~0x00000001);
      partcd_ = getDefaultInstance().getPartcd();
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void setPartcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      partcd_ = value.toStringUtf8();
    }

    public static final int DTPRCD_FIELD_NUMBER = 2;
    private java.lang.String dtprcd_;
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    public boolean hasDtprcd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    public java.lang.String getDtprcd() {
      return dtprcd_;
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDtprcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(dtprcd_);
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    private void setDtprcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      dtprcd_ = value;
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    private void clearDtprcd() {
      bitField0_ = (bitField0_ & ~0x00000002);
      dtprcd_ = getDefaultInstance().getDtprcd();
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    private void setDtprcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      dtprcd_ = value.toStringUtf8();
    }

    public static final int POSITIONCD_FIELD_NUMBER = 3;
    private java.lang.String positioncd_;
    /**
     * <code>optional string positioncd = 3;</code>
     */
    public boolean hasPositioncd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string positioncd = 3;</code>
     */
    public java.lang.String getPositioncd() {
      return positioncd_;
    }
    /**
     * <code>optional string positioncd = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPositioncdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(positioncd_);
    }
    /**
     * <code>optional string positioncd = 3;</code>
     */
    private void setPositioncd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      positioncd_ = value;
    }
    /**
     * <code>optional string positioncd = 3;</code>
     */
    private void clearPositioncd() {
      bitField0_ = (bitField0_ & ~0x00000004);
      positioncd_ = getDefaultInstance().getPositioncd();
    }
    /**
     * <code>optional string positioncd = 3;</code>
     */
    private void setPositioncdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      positioncd_ = value.toStringUtf8();
    }

    public static final int IFPARM_FIELD_NUMBER = 4;
    private java.lang.String ifparm_;
    /**
     * <code>optional string ifparm = 4;</code>
     */
    public boolean hasIfparm() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string ifparm = 4;</code>
     */
    public java.lang.String getIfparm() {
      return ifparm_;
    }
    /**
     * <code>optional string ifparm = 4;</code>
     */
    public com.google.protobuf.ByteString
        getIfparmBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ifparm_);
    }
    /**
     * <code>optional string ifparm = 4;</code>
     */
    private void setIfparm(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      ifparm_ = value;
    }
    /**
     * <code>optional string ifparm = 4;</code>
     */
    private void clearIfparm() {
      bitField0_ = (bitField0_ & ~0x00000008);
      ifparm_ = getDefaultInstance().getIfparm();
    }
    /**
     * <code>optional string ifparm = 4;</code>
     */
    private void setIfparmBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      ifparm_ = value.toStringUtf8();
    }

    public static final int CTNOPE_FIELD_NUMBER = 5;
    private java.lang.String ctnope_;
    /**
     * <code>optional string ctnope = 5;</code>
     */
    public boolean hasCtnope() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ctnope = 5;</code>
     */
    public java.lang.String getCtnope() {
      return ctnope_;
    }
    /**
     * <code>optional string ctnope = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCtnopeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ctnope_);
    }
    /**
     * <code>optional string ctnope = 5;</code>
     */
    private void setCtnope(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      ctnope_ = value;
    }
    /**
     * <code>optional string ctnope = 5;</code>
     */
    private void clearCtnope() {
      bitField0_ = (bitField0_ & ~0x00000010);
      ctnope_ = getDefaultInstance().getCtnope();
    }
    /**
     * <code>optional string ctnope = 5;</code>
     */
    private void setCtnopeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      ctnope_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPartcd());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getDtprcd());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getPositioncd());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getIfparm());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeString(5, getCtnope());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPartcd());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getDtprcd());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPositioncd());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getIfparm());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getCtnope());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.centling.protobuf.RepairCodeProto.DctnRepairCD prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code bean.DctnRepairCD}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.centling.protobuf.RepairCodeProto.DctnRepairCD, Builder> implements
        // @@protoc_insertion_point(builder_implements:bean.DctnRepairCD)
        com.centling.protobuf.RepairCodeProto.DctnRepairCDOrBuilder {
      // Construct using com.centling.protobuf.RepairCodeProto.DctnRepairCD.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string partcd = 1;</code>
       */
      public boolean hasPartcd() {
        return instance.hasPartcd();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public java.lang.String getPartcd() {
        return instance.getPartcd();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPartcdBytes() {
        return instance.getPartcdBytes();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder setPartcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setPartcd(value);
        return this;
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder clearPartcd() {
        copyOnWrite();
        instance.clearPartcd();
        return this;
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder setPartcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPartcdBytes(value);
        return this;
      }

      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public boolean hasDtprcd() {
        return instance.hasDtprcd();
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public java.lang.String getDtprcd() {
        return instance.getDtprcd();
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDtprcdBytes() {
        return instance.getDtprcdBytes();
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public Builder setDtprcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setDtprcd(value);
        return this;
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public Builder clearDtprcd() {
        copyOnWrite();
        instance.clearDtprcd();
        return this;
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public Builder setDtprcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDtprcdBytes(value);
        return this;
      }

      /**
       * <code>optional string positioncd = 3;</code>
       */
      public boolean hasPositioncd() {
        return instance.hasPositioncd();
      }
      /**
       * <code>optional string positioncd = 3;</code>
       */
      public java.lang.String getPositioncd() {
        return instance.getPositioncd();
      }
      /**
       * <code>optional string positioncd = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPositioncdBytes() {
        return instance.getPositioncdBytes();
      }
      /**
       * <code>optional string positioncd = 3;</code>
       */
      public Builder setPositioncd(
          java.lang.String value) {
        copyOnWrite();
        instance.setPositioncd(value);
        return this;
      }
      /**
       * <code>optional string positioncd = 3;</code>
       */
      public Builder clearPositioncd() {
        copyOnWrite();
        instance.clearPositioncd();
        return this;
      }
      /**
       * <code>optional string positioncd = 3;</code>
       */
      public Builder setPositioncdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPositioncdBytes(value);
        return this;
      }

      /**
       * <code>optional string ifparm = 4;</code>
       */
      public boolean hasIfparm() {
        return instance.hasIfparm();
      }
      /**
       * <code>optional string ifparm = 4;</code>
       */
      public java.lang.String getIfparm() {
        return instance.getIfparm();
      }
      /**
       * <code>optional string ifparm = 4;</code>
       */
      public com.google.protobuf.ByteString
          getIfparmBytes() {
        return instance.getIfparmBytes();
      }
      /**
       * <code>optional string ifparm = 4;</code>
       */
      public Builder setIfparm(
          java.lang.String value) {
        copyOnWrite();
        instance.setIfparm(value);
        return this;
      }
      /**
       * <code>optional string ifparm = 4;</code>
       */
      public Builder clearIfparm() {
        copyOnWrite();
        instance.clearIfparm();
        return this;
      }
      /**
       * <code>optional string ifparm = 4;</code>
       */
      public Builder setIfparmBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIfparmBytes(value);
        return this;
      }

      /**
       * <code>optional string ctnope = 5;</code>
       */
      public boolean hasCtnope() {
        return instance.hasCtnope();
      }
      /**
       * <code>optional string ctnope = 5;</code>
       */
      public java.lang.String getCtnope() {
        return instance.getCtnope();
      }
      /**
       * <code>optional string ctnope = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCtnopeBytes() {
        return instance.getCtnopeBytes();
      }
      /**
       * <code>optional string ctnope = 5;</code>
       */
      public Builder setCtnope(
          java.lang.String value) {
        copyOnWrite();
        instance.setCtnope(value);
        return this;
      }
      /**
       * <code>optional string ctnope = 5;</code>
       */
      public Builder clearCtnope() {
        copyOnWrite();
        instance.clearCtnope();
        return this;
      }
      /**
       * <code>optional string ctnope = 5;</code>
       */
      public Builder setCtnopeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCtnopeBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bean.DctnRepairCD)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.centling.protobuf.RepairCodeProto.DctnRepairCD();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.centling.protobuf.RepairCodeProto.DctnRepairCD other = (com.centling.protobuf.RepairCodeProto.DctnRepairCD) arg1;
          partcd_ = visitor.visitString(
              hasPartcd(), partcd_,
              other.hasPartcd(), other.partcd_);
          dtprcd_ = visitor.visitString(
              hasDtprcd(), dtprcd_,
              other.hasDtprcd(), other.dtprcd_);
          positioncd_ = visitor.visitString(
              hasPositioncd(), positioncd_,
              other.hasPositioncd(), other.positioncd_);
          ifparm_ = visitor.visitString(
              hasIfparm(), ifparm_,
              other.hasIfparm(), other.ifparm_);
          ctnope_ = visitor.visitString(
              hasCtnope(), ctnope_,
              other.hasCtnope(), other.ctnope_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  partcd_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  dtprcd_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  positioncd_ = s;
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  ifparm_ = s;
                  break;
                }
                case 42: {
                  String s = input.readString();
                  bitField0_ |= 0x00000010;
                  ctnope_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.centling.protobuf.RepairCodeProto.DctnRepairCD.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:bean.DctnRepairCD)
    private static final com.centling.protobuf.RepairCodeProto.DctnRepairCD DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DctnRepairCD();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.centling.protobuf.RepairCodeProto.DctnRepairCD getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DctnRepairCD> PARSER;

    public static com.google.protobuf.Parser<DctnRepairCD> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DctnScdmtpOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bean.DctnScdmtp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string ctnope = 1;</code>
     */
    boolean hasCtnope();
    /**
     * <code>optional string ctnope = 1;</code>
     */
    java.lang.String getCtnope();
    /**
     * <code>optional string ctnope = 1;</code>
     */
    com.google.protobuf.ByteString
        getCtnopeBytes();

    /**
     * <code>optional string scdmtp = 2;</code>
     */
    boolean hasScdmtp();
    /**
     * <code>optional string scdmtp = 2;</code>
     */
    java.lang.String getScdmtp();
    /**
     * <code>optional string scdmtp = 2;</code>
     */
    com.google.protobuf.ByteString
        getScdmtpBytes();

    /**
     * <code>optional string dtprcd = 3;</code>
     */
    boolean hasDtprcd();
    /**
     * <code>optional string dtprcd = 3;</code>
     */
    java.lang.String getDtprcd();
    /**
     * <code>optional string dtprcd = 3;</code>
     */
    com.google.protobuf.ByteString
        getDtprcdBytes();

    /**
     * <code>optional string ectntp = 4;</code>
     */
    boolean hasEctntp();
    /**
     * <code>optional string ectntp = 4;</code>
     */
    java.lang.String getEctntp();
    /**
     * <code>optional string ectntp = 4;</code>
     */
    com.google.protobuf.ByteString
        getEctntpBytes();

    /**
     * <code>optional string datpcd = 5;</code>
     */
    boolean hasDatpcd();
    /**
     * <code>optional string datpcd = 5;</code>
     */
    java.lang.String getDatpcd();
    /**
     * <code>optional string datpcd = 5;</code>
     */
    com.google.protobuf.ByteString
        getDatpcdBytes();

    /**
     * <code>optional string acctcd = 6;</code>
     */
    boolean hasAcctcd();
    /**
     * <code>optional string acctcd = 6;</code>
     */
    java.lang.String getAcctcd();
    /**
     * <code>optional string acctcd = 6;</code>
     */
    com.google.protobuf.ByteString
        getAcctcdBytes();

    /**
     * <code>optional int32 len = 7;</code>
     */
    boolean hasLen();
    /**
     * <code>optional int32 len = 7;</code>
     */
    int getLen();

    /**
     * <code>optional int32 wid = 8;</code>
     */
    boolean hasWid();
    /**
     * <code>optional int32 wid = 8;</code>
     */
    int getWid();

    /**
     * <code>optional int32 num = 9;</code>
     */
    boolean hasNum();
    /**
     * <code>optional int32 num = 9;</code>
     */
    int getNum();
  }
  /**
   * Protobuf type {@code bean.DctnScdmtp}
   */
  public  static final class DctnScdmtp extends
      com.google.protobuf.GeneratedMessageLite<
          DctnScdmtp, DctnScdmtp.Builder> implements
      // @@protoc_insertion_point(message_implements:bean.DctnScdmtp)
      DctnScdmtpOrBuilder {
    private DctnScdmtp() {
      ctnope_ = "";
      scdmtp_ = "";
      dtprcd_ = "";
      ectntp_ = "";
      datpcd_ = "";
      acctcd_ = "";
    }
    private int bitField0_;
    public static final int CTNOPE_FIELD_NUMBER = 1;
    private java.lang.String ctnope_;
    /**
     * <code>optional string ctnope = 1;</code>
     */
    public boolean hasCtnope() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    public java.lang.String getCtnope() {
      return ctnope_;
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCtnopeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ctnope_);
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    private void setCtnope(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ctnope_ = value;
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    private void clearCtnope() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ctnope_ = getDefaultInstance().getCtnope();
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    private void setCtnopeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ctnope_ = value.toStringUtf8();
    }

    public static final int SCDMTP_FIELD_NUMBER = 2;
    private java.lang.String scdmtp_;
    /**
     * <code>optional string scdmtp = 2;</code>
     */
    public boolean hasScdmtp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string scdmtp = 2;</code>
     */
    public java.lang.String getScdmtp() {
      return scdmtp_;
    }
    /**
     * <code>optional string scdmtp = 2;</code>
     */
    public com.google.protobuf.ByteString
        getScdmtpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(scdmtp_);
    }
    /**
     * <code>optional string scdmtp = 2;</code>
     */
    private void setScdmtp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      scdmtp_ = value;
    }
    /**
     * <code>optional string scdmtp = 2;</code>
     */
    private void clearScdmtp() {
      bitField0_ = (bitField0_ & ~0x00000002);
      scdmtp_ = getDefaultInstance().getScdmtp();
    }
    /**
     * <code>optional string scdmtp = 2;</code>
     */
    private void setScdmtpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      scdmtp_ = value.toStringUtf8();
    }

    public static final int DTPRCD_FIELD_NUMBER = 3;
    private java.lang.String dtprcd_;
    /**
     * <code>optional string dtprcd = 3;</code>
     */
    public boolean hasDtprcd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string dtprcd = 3;</code>
     */
    public java.lang.String getDtprcd() {
      return dtprcd_;
    }
    /**
     * <code>optional string dtprcd = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDtprcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(dtprcd_);
    }
    /**
     * <code>optional string dtprcd = 3;</code>
     */
    private void setDtprcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      dtprcd_ = value;
    }
    /**
     * <code>optional string dtprcd = 3;</code>
     */
    private void clearDtprcd() {
      bitField0_ = (bitField0_ & ~0x00000004);
      dtprcd_ = getDefaultInstance().getDtprcd();
    }
    /**
     * <code>optional string dtprcd = 3;</code>
     */
    private void setDtprcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      dtprcd_ = value.toStringUtf8();
    }

    public static final int ECTNTP_FIELD_NUMBER = 4;
    private java.lang.String ectntp_;
    /**
     * <code>optional string ectntp = 4;</code>
     */
    public boolean hasEctntp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string ectntp = 4;</code>
     */
    public java.lang.String getEctntp() {
      return ectntp_;
    }
    /**
     * <code>optional string ectntp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getEctntpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ectntp_);
    }
    /**
     * <code>optional string ectntp = 4;</code>
     */
    private void setEctntp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      ectntp_ = value;
    }
    /**
     * <code>optional string ectntp = 4;</code>
     */
    private void clearEctntp() {
      bitField0_ = (bitField0_ & ~0x00000008);
      ectntp_ = getDefaultInstance().getEctntp();
    }
    /**
     * <code>optional string ectntp = 4;</code>
     */
    private void setEctntpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      ectntp_ = value.toStringUtf8();
    }

    public static final int DATPCD_FIELD_NUMBER = 5;
    private java.lang.String datpcd_;
    /**
     * <code>optional string datpcd = 5;</code>
     */
    public boolean hasDatpcd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string datpcd = 5;</code>
     */
    public java.lang.String getDatpcd() {
      return datpcd_;
    }
    /**
     * <code>optional string datpcd = 5;</code>
     */
    public com.google.protobuf.ByteString
        getDatpcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(datpcd_);
    }
    /**
     * <code>optional string datpcd = 5;</code>
     */
    private void setDatpcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      datpcd_ = value;
    }
    /**
     * <code>optional string datpcd = 5;</code>
     */
    private void clearDatpcd() {
      bitField0_ = (bitField0_ & ~0x00000010);
      datpcd_ = getDefaultInstance().getDatpcd();
    }
    /**
     * <code>optional string datpcd = 5;</code>
     */
    private void setDatpcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      datpcd_ = value.toStringUtf8();
    }

    public static final int ACCTCD_FIELD_NUMBER = 6;
    private java.lang.String acctcd_;
    /**
     * <code>optional string acctcd = 6;</code>
     */
    public boolean hasAcctcd() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string acctcd = 6;</code>
     */
    public java.lang.String getAcctcd() {
      return acctcd_;
    }
    /**
     * <code>optional string acctcd = 6;</code>
     */
    public com.google.protobuf.ByteString
        getAcctcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(acctcd_);
    }
    /**
     * <code>optional string acctcd = 6;</code>
     */
    private void setAcctcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      acctcd_ = value;
    }
    /**
     * <code>optional string acctcd = 6;</code>
     */
    private void clearAcctcd() {
      bitField0_ = (bitField0_ & ~0x00000020);
      acctcd_ = getDefaultInstance().getAcctcd();
    }
    /**
     * <code>optional string acctcd = 6;</code>
     */
    private void setAcctcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      acctcd_ = value.toStringUtf8();
    }

    public static final int LEN_FIELD_NUMBER = 7;
    private int len_;
    /**
     * <code>optional int32 len = 7;</code>
     */
    public boolean hasLen() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 len = 7;</code>
     */
    public int getLen() {
      return len_;
    }
    /**
     * <code>optional int32 len = 7;</code>
     */
    private void setLen(int value) {
      bitField0_ |= 0x00000040;
      len_ = value;
    }
    /**
     * <code>optional int32 len = 7;</code>
     */
    private void clearLen() {
      bitField0_ = (bitField0_ & ~0x00000040);
      len_ = 0;
    }

    public static final int WID_FIELD_NUMBER = 8;
    private int wid_;
    /**
     * <code>optional int32 wid = 8;</code>
     */
    public boolean hasWid() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 wid = 8;</code>
     */
    public int getWid() {
      return wid_;
    }
    /**
     * <code>optional int32 wid = 8;</code>
     */
    private void setWid(int value) {
      bitField0_ |= 0x00000080;
      wid_ = value;
    }
    /**
     * <code>optional int32 wid = 8;</code>
     */
    private void clearWid() {
      bitField0_ = (bitField0_ & ~0x00000080);
      wid_ = 0;
    }

    public static final int NUM_FIELD_NUMBER = 9;
    private int num_;
    /**
     * <code>optional int32 num = 9;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 num = 9;</code>
     */
    public int getNum() {
      return num_;
    }
    /**
     * <code>optional int32 num = 9;</code>
     */
    private void setNum(int value) {
      bitField0_ |= 0x00000100;
      num_ = value;
    }
    /**
     * <code>optional int32 num = 9;</code>
     */
    private void clearNum() {
      bitField0_ = (bitField0_ & ~0x00000100);
      num_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getCtnope());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getScdmtp());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getDtprcd());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getEctntp());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeString(5, getDatpcd());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(6, getAcctcd());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, len_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, wid_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, num_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getCtnope());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getScdmtp());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDtprcd());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getEctntp());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getDatpcd());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getAcctcd());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, len_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, wid_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, num_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.centling.protobuf.RepairCodeProto.DctnScdmtp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code bean.DctnScdmtp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.centling.protobuf.RepairCodeProto.DctnScdmtp, Builder> implements
        // @@protoc_insertion_point(builder_implements:bean.DctnScdmtp)
        com.centling.protobuf.RepairCodeProto.DctnScdmtpOrBuilder {
      // Construct using com.centling.protobuf.RepairCodeProto.DctnScdmtp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string ctnope = 1;</code>
       */
      public boolean hasCtnope() {
        return instance.hasCtnope();
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public java.lang.String getCtnope() {
        return instance.getCtnope();
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCtnopeBytes() {
        return instance.getCtnopeBytes();
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public Builder setCtnope(
          java.lang.String value) {
        copyOnWrite();
        instance.setCtnope(value);
        return this;
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public Builder clearCtnope() {
        copyOnWrite();
        instance.clearCtnope();
        return this;
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public Builder setCtnopeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCtnopeBytes(value);
        return this;
      }

      /**
       * <code>optional string scdmtp = 2;</code>
       */
      public boolean hasScdmtp() {
        return instance.hasScdmtp();
      }
      /**
       * <code>optional string scdmtp = 2;</code>
       */
      public java.lang.String getScdmtp() {
        return instance.getScdmtp();
      }
      /**
       * <code>optional string scdmtp = 2;</code>
       */
      public com.google.protobuf.ByteString
          getScdmtpBytes() {
        return instance.getScdmtpBytes();
      }
      /**
       * <code>optional string scdmtp = 2;</code>
       */
      public Builder setScdmtp(
          java.lang.String value) {
        copyOnWrite();
        instance.setScdmtp(value);
        return this;
      }
      /**
       * <code>optional string scdmtp = 2;</code>
       */
      public Builder clearScdmtp() {
        copyOnWrite();
        instance.clearScdmtp();
        return this;
      }
      /**
       * <code>optional string scdmtp = 2;</code>
       */
      public Builder setScdmtpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setScdmtpBytes(value);
        return this;
      }

      /**
       * <code>optional string dtprcd = 3;</code>
       */
      public boolean hasDtprcd() {
        return instance.hasDtprcd();
      }
      /**
       * <code>optional string dtprcd = 3;</code>
       */
      public java.lang.String getDtprcd() {
        return instance.getDtprcd();
      }
      /**
       * <code>optional string dtprcd = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDtprcdBytes() {
        return instance.getDtprcdBytes();
      }
      /**
       * <code>optional string dtprcd = 3;</code>
       */
      public Builder setDtprcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setDtprcd(value);
        return this;
      }
      /**
       * <code>optional string dtprcd = 3;</code>
       */
      public Builder clearDtprcd() {
        copyOnWrite();
        instance.clearDtprcd();
        return this;
      }
      /**
       * <code>optional string dtprcd = 3;</code>
       */
      public Builder setDtprcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDtprcdBytes(value);
        return this;
      }

      /**
       * <code>optional string ectntp = 4;</code>
       */
      public boolean hasEctntp() {
        return instance.hasEctntp();
      }
      /**
       * <code>optional string ectntp = 4;</code>
       */
      public java.lang.String getEctntp() {
        return instance.getEctntp();
      }
      /**
       * <code>optional string ectntp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getEctntpBytes() {
        return instance.getEctntpBytes();
      }
      /**
       * <code>optional string ectntp = 4;</code>
       */
      public Builder setEctntp(
          java.lang.String value) {
        copyOnWrite();
        instance.setEctntp(value);
        return this;
      }
      /**
       * <code>optional string ectntp = 4;</code>
       */
      public Builder clearEctntp() {
        copyOnWrite();
        instance.clearEctntp();
        return this;
      }
      /**
       * <code>optional string ectntp = 4;</code>
       */
      public Builder setEctntpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEctntpBytes(value);
        return this;
      }

      /**
       * <code>optional string datpcd = 5;</code>
       */
      public boolean hasDatpcd() {
        return instance.hasDatpcd();
      }
      /**
       * <code>optional string datpcd = 5;</code>
       */
      public java.lang.String getDatpcd() {
        return instance.getDatpcd();
      }
      /**
       * <code>optional string datpcd = 5;</code>
       */
      public com.google.protobuf.ByteString
          getDatpcdBytes() {
        return instance.getDatpcdBytes();
      }
      /**
       * <code>optional string datpcd = 5;</code>
       */
      public Builder setDatpcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setDatpcd(value);
        return this;
      }
      /**
       * <code>optional string datpcd = 5;</code>
       */
      public Builder clearDatpcd() {
        copyOnWrite();
        instance.clearDatpcd();
        return this;
      }
      /**
       * <code>optional string datpcd = 5;</code>
       */
      public Builder setDatpcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDatpcdBytes(value);
        return this;
      }

      /**
       * <code>optional string acctcd = 6;</code>
       */
      public boolean hasAcctcd() {
        return instance.hasAcctcd();
      }
      /**
       * <code>optional string acctcd = 6;</code>
       */
      public java.lang.String getAcctcd() {
        return instance.getAcctcd();
      }
      /**
       * <code>optional string acctcd = 6;</code>
       */
      public com.google.protobuf.ByteString
          getAcctcdBytes() {
        return instance.getAcctcdBytes();
      }
      /**
       * <code>optional string acctcd = 6;</code>
       */
      public Builder setAcctcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setAcctcd(value);
        return this;
      }
      /**
       * <code>optional string acctcd = 6;</code>
       */
      public Builder clearAcctcd() {
        copyOnWrite();
        instance.clearAcctcd();
        return this;
      }
      /**
       * <code>optional string acctcd = 6;</code>
       */
      public Builder setAcctcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAcctcdBytes(value);
        return this;
      }

      /**
       * <code>optional int32 len = 7;</code>
       */
      public boolean hasLen() {
        return instance.hasLen();
      }
      /**
       * <code>optional int32 len = 7;</code>
       */
      public int getLen() {
        return instance.getLen();
      }
      /**
       * <code>optional int32 len = 7;</code>
       */
      public Builder setLen(int value) {
        copyOnWrite();
        instance.setLen(value);
        return this;
      }
      /**
       * <code>optional int32 len = 7;</code>
       */
      public Builder clearLen() {
        copyOnWrite();
        instance.clearLen();
        return this;
      }

      /**
       * <code>optional int32 wid = 8;</code>
       */
      public boolean hasWid() {
        return instance.hasWid();
      }
      /**
       * <code>optional int32 wid = 8;</code>
       */
      public int getWid() {
        return instance.getWid();
      }
      /**
       * <code>optional int32 wid = 8;</code>
       */
      public Builder setWid(int value) {
        copyOnWrite();
        instance.setWid(value);
        return this;
      }
      /**
       * <code>optional int32 wid = 8;</code>
       */
      public Builder clearWid() {
        copyOnWrite();
        instance.clearWid();
        return this;
      }

      /**
       * <code>optional int32 num = 9;</code>
       */
      public boolean hasNum() {
        return instance.hasNum();
      }
      /**
       * <code>optional int32 num = 9;</code>
       */
      public int getNum() {
        return instance.getNum();
      }
      /**
       * <code>optional int32 num = 9;</code>
       */
      public Builder setNum(int value) {
        copyOnWrite();
        instance.setNum(value);
        return this;
      }
      /**
       * <code>optional int32 num = 9;</code>
       */
      public Builder clearNum() {
        copyOnWrite();
        instance.clearNum();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bean.DctnScdmtp)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.centling.protobuf.RepairCodeProto.DctnScdmtp();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.centling.protobuf.RepairCodeProto.DctnScdmtp other = (com.centling.protobuf.RepairCodeProto.DctnScdmtp) arg1;
          ctnope_ = visitor.visitString(
              hasCtnope(), ctnope_,
              other.hasCtnope(), other.ctnope_);
          scdmtp_ = visitor.visitString(
              hasScdmtp(), scdmtp_,
              other.hasScdmtp(), other.scdmtp_);
          dtprcd_ = visitor.visitString(
              hasDtprcd(), dtprcd_,
              other.hasDtprcd(), other.dtprcd_);
          ectntp_ = visitor.visitString(
              hasEctntp(), ectntp_,
              other.hasEctntp(), other.ectntp_);
          datpcd_ = visitor.visitString(
              hasDatpcd(), datpcd_,
              other.hasDatpcd(), other.datpcd_);
          acctcd_ = visitor.visitString(
              hasAcctcd(), acctcd_,
              other.hasAcctcd(), other.acctcd_);
          len_ = visitor.visitInt(
              hasLen(), len_,
              other.hasLen(), other.len_);
          wid_ = visitor.visitInt(
              hasWid(), wid_,
              other.hasWid(), other.wid_);
          num_ = visitor.visitInt(
              hasNum(), num_,
              other.hasNum(), other.num_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  ctnope_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  scdmtp_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  dtprcd_ = s;
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  ectntp_ = s;
                  break;
                }
                case 42: {
                  String s = input.readString();
                  bitField0_ |= 0x00000010;
                  datpcd_ = s;
                  break;
                }
                case 50: {
                  String s = input.readString();
                  bitField0_ |= 0x00000020;
                  acctcd_ = s;
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  len_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  wid_ = input.readInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  num_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.centling.protobuf.RepairCodeProto.DctnScdmtp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:bean.DctnScdmtp)
    private static final com.centling.protobuf.RepairCodeProto.DctnScdmtp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DctnScdmtp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.centling.protobuf.RepairCodeProto.DctnScdmtp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DctnScdmtp> PARSER;

    public static com.google.protobuf.Parser<DctnScdmtp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DCtnPartCDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bean.DCtnPartCD)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string partcd = 1;</code>
     */
    boolean hasPartcd();
    /**
     * <code>optional string partcd = 1;</code>
     */
    java.lang.String getPartcd();
    /**
     * <code>optional string partcd = 1;</code>
     */
    com.google.protobuf.ByteString
        getPartcdBytes();

    /**
     * <code>optional string ctnope = 2;</code>
     */
    boolean hasCtnope();
    /**
     * <code>optional string ctnope = 2;</code>
     */
    java.lang.String getCtnope();
    /**
     * <code>optional string ctnope = 2;</code>
     */
    com.google.protobuf.ByteString
        getCtnopeBytes();

    /**
     * <code>optional string position = 3;</code>
     */
    boolean hasPosition();
    /**
     * <code>optional string position = 3;</code>
     */
    java.lang.String getPosition();
    /**
     * <code>optional string position = 3;</code>
     */
    com.google.protobuf.ByteString
        getPositionBytes();
  }
  /**
   * Protobuf type {@code bean.DCtnPartCD}
   */
  public  static final class DCtnPartCD extends
      com.google.protobuf.GeneratedMessageLite<
          DCtnPartCD, DCtnPartCD.Builder> implements
      // @@protoc_insertion_point(message_implements:bean.DCtnPartCD)
      DCtnPartCDOrBuilder {
    private DCtnPartCD() {
      partcd_ = "";
      ctnope_ = "";
      position_ = "";
    }
    private int bitField0_;
    public static final int PARTCD_FIELD_NUMBER = 1;
    private java.lang.String partcd_;
    /**
     * <code>optional string partcd = 1;</code>
     */
    public boolean hasPartcd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    public java.lang.String getPartcd() {
      return partcd_;
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPartcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(partcd_);
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void setPartcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      partcd_ = value;
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void clearPartcd() {
      bitField0_ = (bitField0_ & ~0x00000001);
      partcd_ = getDefaultInstance().getPartcd();
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void setPartcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      partcd_ = value.toStringUtf8();
    }

    public static final int CTNOPE_FIELD_NUMBER = 2;
    private java.lang.String ctnope_;
    /**
     * <code>optional string ctnope = 2;</code>
     */
    public boolean hasCtnope() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    public java.lang.String getCtnope() {
      return ctnope_;
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCtnopeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ctnope_);
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    private void setCtnope(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      ctnope_ = value;
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    private void clearCtnope() {
      bitField0_ = (bitField0_ & ~0x00000002);
      ctnope_ = getDefaultInstance().getCtnope();
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    private void setCtnopeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      ctnope_ = value.toStringUtf8();
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private java.lang.String position_;
    /**
     * <code>optional string position = 3;</code>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string position = 3;</code>
     */
    public java.lang.String getPosition() {
      return position_;
    }
    /**
     * <code>optional string position = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPositionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(position_);
    }
    /**
     * <code>optional string position = 3;</code>
     */
    private void setPosition(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      position_ = value;
    }
    /**
     * <code>optional string position = 3;</code>
     */
    private void clearPosition() {
      bitField0_ = (bitField0_ & ~0x00000004);
      position_ = getDefaultInstance().getPosition();
    }
    /**
     * <code>optional string position = 3;</code>
     */
    private void setPositionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      position_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPartcd());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getCtnope());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getPosition());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPartcd());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getCtnope());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPosition());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.centling.protobuf.RepairCodeProto.DCtnPartCD prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code bean.DCtnPartCD}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.centling.protobuf.RepairCodeProto.DCtnPartCD, Builder> implements
        // @@protoc_insertion_point(builder_implements:bean.DCtnPartCD)
        com.centling.protobuf.RepairCodeProto.DCtnPartCDOrBuilder {
      // Construct using com.centling.protobuf.RepairCodeProto.DCtnPartCD.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string partcd = 1;</code>
       */
      public boolean hasPartcd() {
        return instance.hasPartcd();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public java.lang.String getPartcd() {
        return instance.getPartcd();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPartcdBytes() {
        return instance.getPartcdBytes();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder setPartcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setPartcd(value);
        return this;
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder clearPartcd() {
        copyOnWrite();
        instance.clearPartcd();
        return this;
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder setPartcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPartcdBytes(value);
        return this;
      }

      /**
       * <code>optional string ctnope = 2;</code>
       */
      public boolean hasCtnope() {
        return instance.hasCtnope();
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public java.lang.String getCtnope() {
        return instance.getCtnope();
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCtnopeBytes() {
        return instance.getCtnopeBytes();
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public Builder setCtnope(
          java.lang.String value) {
        copyOnWrite();
        instance.setCtnope(value);
        return this;
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public Builder clearCtnope() {
        copyOnWrite();
        instance.clearCtnope();
        return this;
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public Builder setCtnopeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCtnopeBytes(value);
        return this;
      }

      /**
       * <code>optional string position = 3;</code>
       */
      public boolean hasPosition() {
        return instance.hasPosition();
      }
      /**
       * <code>optional string position = 3;</code>
       */
      public java.lang.String getPosition() {
        return instance.getPosition();
      }
      /**
       * <code>optional string position = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPositionBytes() {
        return instance.getPositionBytes();
      }
      /**
       * <code>optional string position = 3;</code>
       */
      public Builder setPosition(
          java.lang.String value) {
        copyOnWrite();
        instance.setPosition(value);
        return this;
      }
      /**
       * <code>optional string position = 3;</code>
       */
      public Builder clearPosition() {
        copyOnWrite();
        instance.clearPosition();
        return this;
      }
      /**
       * <code>optional string position = 3;</code>
       */
      public Builder setPositionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPositionBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bean.DCtnPartCD)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.centling.protobuf.RepairCodeProto.DCtnPartCD();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.centling.protobuf.RepairCodeProto.DCtnPartCD other = (com.centling.protobuf.RepairCodeProto.DCtnPartCD) arg1;
          partcd_ = visitor.visitString(
              hasPartcd(), partcd_,
              other.hasPartcd(), other.partcd_);
          ctnope_ = visitor.visitString(
              hasCtnope(), ctnope_,
              other.hasCtnope(), other.ctnope_);
          position_ = visitor.visitString(
              hasPosition(), position_,
              other.hasPosition(), other.position_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  partcd_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  ctnope_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  position_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.centling.protobuf.RepairCodeProto.DCtnPartCD.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:bean.DCtnPartCD)
    private static final com.centling.protobuf.RepairCodeProto.DCtnPartCD DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DCtnPartCD();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.centling.protobuf.RepairCodeProto.DCtnPartCD getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DCtnPartCD> PARSER;

    public static com.google.protobuf.Parser<DCtnPartCD> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DcoldCtnPartCDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bean.DcoldCtnPartCD)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string partcd = 1;</code>
     */
    boolean hasPartcd();
    /**
     * <code>optional string partcd = 1;</code>
     */
    java.lang.String getPartcd();
    /**
     * <code>optional string partcd = 1;</code>
     */
    com.google.protobuf.ByteString
        getPartcdBytes();

    /**
     * <code>optional string ctnope = 2;</code>
     */
    boolean hasCtnope();
    /**
     * <code>optional string ctnope = 2;</code>
     */
    java.lang.String getCtnope();
    /**
     * <code>optional string ctnope = 2;</code>
     */
    com.google.protobuf.ByteString
        getCtnopeBytes();
  }
  /**
   * Protobuf type {@code bean.DcoldCtnPartCD}
   */
  public  static final class DcoldCtnPartCD extends
      com.google.protobuf.GeneratedMessageLite<
          DcoldCtnPartCD, DcoldCtnPartCD.Builder> implements
      // @@protoc_insertion_point(message_implements:bean.DcoldCtnPartCD)
      DcoldCtnPartCDOrBuilder {
    private DcoldCtnPartCD() {
      partcd_ = "";
      ctnope_ = "";
    }
    private int bitField0_;
    public static final int PARTCD_FIELD_NUMBER = 1;
    private java.lang.String partcd_;
    /**
     * <code>optional string partcd = 1;</code>
     */
    public boolean hasPartcd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    public java.lang.String getPartcd() {
      return partcd_;
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPartcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(partcd_);
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void setPartcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      partcd_ = value;
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void clearPartcd() {
      bitField0_ = (bitField0_ & ~0x00000001);
      partcd_ = getDefaultInstance().getPartcd();
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void setPartcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      partcd_ = value.toStringUtf8();
    }

    public static final int CTNOPE_FIELD_NUMBER = 2;
    private java.lang.String ctnope_;
    /**
     * <code>optional string ctnope = 2;</code>
     */
    public boolean hasCtnope() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    public java.lang.String getCtnope() {
      return ctnope_;
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCtnopeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ctnope_);
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    private void setCtnope(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      ctnope_ = value;
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    private void clearCtnope() {
      bitField0_ = (bitField0_ & ~0x00000002);
      ctnope_ = getDefaultInstance().getCtnope();
    }
    /**
     * <code>optional string ctnope = 2;</code>
     */
    private void setCtnopeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      ctnope_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPartcd());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getCtnope());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPartcd());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getCtnope());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code bean.DcoldCtnPartCD}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD, Builder> implements
        // @@protoc_insertion_point(builder_implements:bean.DcoldCtnPartCD)
        com.centling.protobuf.RepairCodeProto.DcoldCtnPartCDOrBuilder {
      // Construct using com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string partcd = 1;</code>
       */
      public boolean hasPartcd() {
        return instance.hasPartcd();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public java.lang.String getPartcd() {
        return instance.getPartcd();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPartcdBytes() {
        return instance.getPartcdBytes();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder setPartcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setPartcd(value);
        return this;
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder clearPartcd() {
        copyOnWrite();
        instance.clearPartcd();
        return this;
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder setPartcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPartcdBytes(value);
        return this;
      }

      /**
       * <code>optional string ctnope = 2;</code>
       */
      public boolean hasCtnope() {
        return instance.hasCtnope();
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public java.lang.String getCtnope() {
        return instance.getCtnope();
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCtnopeBytes() {
        return instance.getCtnopeBytes();
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public Builder setCtnope(
          java.lang.String value) {
        copyOnWrite();
        instance.setCtnope(value);
        return this;
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public Builder clearCtnope() {
        copyOnWrite();
        instance.clearCtnope();
        return this;
      }
      /**
       * <code>optional string ctnope = 2;</code>
       */
      public Builder setCtnopeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCtnopeBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bean.DcoldCtnPartCD)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD other = (com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD) arg1;
          partcd_ = visitor.visitString(
              hasPartcd(), partcd_,
              other.hasPartcd(), other.partcd_);
          ctnope_ = visitor.visitString(
              hasCtnope(), ctnope_,
              other.hasCtnope(), other.ctnope_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  partcd_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  ctnope_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:bean.DcoldCtnPartCD)
    private static final com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DcoldCtnPartCD();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.centling.protobuf.RepairCodeProto.DcoldCtnPartCD getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DcoldCtnPartCD> PARSER;

    public static com.google.protobuf.Parser<DcoldCtnPartCD> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DcoldCtnRepairCDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bean.DcoldCtnRepairCD)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string partcd = 1;</code>
     */
    boolean hasPartcd();
    /**
     * <code>optional string partcd = 1;</code>
     */
    java.lang.String getPartcd();
    /**
     * <code>optional string partcd = 1;</code>
     */
    com.google.protobuf.ByteString
        getPartcdBytes();

    /**
     * <code>optional string dtprcd = 2;</code>
     */
    boolean hasDtprcd();
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    java.lang.String getDtprcd();
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    com.google.protobuf.ByteString
        getDtprcdBytes();

    /**
     * <code>optional string mater = 3;</code>
     */
    boolean hasMater();
    /**
     * <code>optional string mater = 3;</code>
     */
    java.lang.String getMater();
    /**
     * <code>optional string mater = 3;</code>
     */
    com.google.protobuf.ByteString
        getMaterBytes();

    /**
     * <code>optional string gsjffs = 4;</code>
     */
    boolean hasGsjffs();
    /**
     * <code>optional string gsjffs = 4;</code>
     */
    java.lang.String getGsjffs();
    /**
     * <code>optional string gsjffs = 4;</code>
     */
    com.google.protobuf.ByteString
        getGsjffsBytes();

    /**
     * <code>optional string cljffs = 5;</code>
     */
    boolean hasCljffs();
    /**
     * <code>optional string cljffs = 5;</code>
     */
    java.lang.String getCljffs();
    /**
     * <code>optional string cljffs = 5;</code>
     */
    com.google.protobuf.ByteString
        getCljffsBytes();

    /**
     * <code>optional string ctnope = 6;</code>
     */
    boolean hasCtnope();
    /**
     * <code>optional string ctnope = 6;</code>
     */
    java.lang.String getCtnope();
    /**
     * <code>optional string ctnope = 6;</code>
     */
    com.google.protobuf.ByteString
        getCtnopeBytes();
  }
  /**
   * Protobuf type {@code bean.DcoldCtnRepairCD}
   */
  public  static final class DcoldCtnRepairCD extends
      com.google.protobuf.GeneratedMessageLite<
          DcoldCtnRepairCD, DcoldCtnRepairCD.Builder> implements
      // @@protoc_insertion_point(message_implements:bean.DcoldCtnRepairCD)
      DcoldCtnRepairCDOrBuilder {
    private DcoldCtnRepairCD() {
      partcd_ = "";
      dtprcd_ = "";
      mater_ = "";
      gsjffs_ = "";
      cljffs_ = "";
      ctnope_ = "";
    }
    private int bitField0_;
    public static final int PARTCD_FIELD_NUMBER = 1;
    private java.lang.String partcd_;
    /**
     * <code>optional string partcd = 1;</code>
     */
    public boolean hasPartcd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    public java.lang.String getPartcd() {
      return partcd_;
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPartcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(partcd_);
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void setPartcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      partcd_ = value;
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void clearPartcd() {
      bitField0_ = (bitField0_ & ~0x00000001);
      partcd_ = getDefaultInstance().getPartcd();
    }
    /**
     * <code>optional string partcd = 1;</code>
     */
    private void setPartcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      partcd_ = value.toStringUtf8();
    }

    public static final int DTPRCD_FIELD_NUMBER = 2;
    private java.lang.String dtprcd_;
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    public boolean hasDtprcd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    public java.lang.String getDtprcd() {
      return dtprcd_;
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDtprcdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(dtprcd_);
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    private void setDtprcd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      dtprcd_ = value;
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    private void clearDtprcd() {
      bitField0_ = (bitField0_ & ~0x00000002);
      dtprcd_ = getDefaultInstance().getDtprcd();
    }
    /**
     * <code>optional string dtprcd = 2;</code>
     */
    private void setDtprcdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      dtprcd_ = value.toStringUtf8();
    }

    public static final int MATER_FIELD_NUMBER = 3;
    private java.lang.String mater_;
    /**
     * <code>optional string mater = 3;</code>
     */
    public boolean hasMater() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string mater = 3;</code>
     */
    public java.lang.String getMater() {
      return mater_;
    }
    /**
     * <code>optional string mater = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMaterBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(mater_);
    }
    /**
     * <code>optional string mater = 3;</code>
     */
    private void setMater(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      mater_ = value;
    }
    /**
     * <code>optional string mater = 3;</code>
     */
    private void clearMater() {
      bitField0_ = (bitField0_ & ~0x00000004);
      mater_ = getDefaultInstance().getMater();
    }
    /**
     * <code>optional string mater = 3;</code>
     */
    private void setMaterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      mater_ = value.toStringUtf8();
    }

    public static final int GSJFFS_FIELD_NUMBER = 4;
    private java.lang.String gsjffs_;
    /**
     * <code>optional string gsjffs = 4;</code>
     */
    public boolean hasGsjffs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string gsjffs = 4;</code>
     */
    public java.lang.String getGsjffs() {
      return gsjffs_;
    }
    /**
     * <code>optional string gsjffs = 4;</code>
     */
    public com.google.protobuf.ByteString
        getGsjffsBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gsjffs_);
    }
    /**
     * <code>optional string gsjffs = 4;</code>
     */
    private void setGsjffs(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      gsjffs_ = value;
    }
    /**
     * <code>optional string gsjffs = 4;</code>
     */
    private void clearGsjffs() {
      bitField0_ = (bitField0_ & ~0x00000008);
      gsjffs_ = getDefaultInstance().getGsjffs();
    }
    /**
     * <code>optional string gsjffs = 4;</code>
     */
    private void setGsjffsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      gsjffs_ = value.toStringUtf8();
    }

    public static final int CLJFFS_FIELD_NUMBER = 5;
    private java.lang.String cljffs_;
    /**
     * <code>optional string cljffs = 5;</code>
     */
    public boolean hasCljffs() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string cljffs = 5;</code>
     */
    public java.lang.String getCljffs() {
      return cljffs_;
    }
    /**
     * <code>optional string cljffs = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCljffsBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(cljffs_);
    }
    /**
     * <code>optional string cljffs = 5;</code>
     */
    private void setCljffs(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      cljffs_ = value;
    }
    /**
     * <code>optional string cljffs = 5;</code>
     */
    private void clearCljffs() {
      bitField0_ = (bitField0_ & ~0x00000010);
      cljffs_ = getDefaultInstance().getCljffs();
    }
    /**
     * <code>optional string cljffs = 5;</code>
     */
    private void setCljffsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      cljffs_ = value.toStringUtf8();
    }

    public static final int CTNOPE_FIELD_NUMBER = 6;
    private java.lang.String ctnope_;
    /**
     * <code>optional string ctnope = 6;</code>
     */
    public boolean hasCtnope() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string ctnope = 6;</code>
     */
    public java.lang.String getCtnope() {
      return ctnope_;
    }
    /**
     * <code>optional string ctnope = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCtnopeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ctnope_);
    }
    /**
     * <code>optional string ctnope = 6;</code>
     */
    private void setCtnope(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      ctnope_ = value;
    }
    /**
     * <code>optional string ctnope = 6;</code>
     */
    private void clearCtnope() {
      bitField0_ = (bitField0_ & ~0x00000020);
      ctnope_ = getDefaultInstance().getCtnope();
    }
    /**
     * <code>optional string ctnope = 6;</code>
     */
    private void setCtnopeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      ctnope_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPartcd());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getDtprcd());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getMater());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getGsjffs());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeString(5, getCljffs());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(6, getCtnope());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPartcd());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getDtprcd());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMater());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getGsjffs());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getCljffs());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getCtnope());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code bean.DcoldCtnRepairCD}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD, Builder> implements
        // @@protoc_insertion_point(builder_implements:bean.DcoldCtnRepairCD)
        com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCDOrBuilder {
      // Construct using com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string partcd = 1;</code>
       */
      public boolean hasPartcd() {
        return instance.hasPartcd();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public java.lang.String getPartcd() {
        return instance.getPartcd();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPartcdBytes() {
        return instance.getPartcdBytes();
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder setPartcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setPartcd(value);
        return this;
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder clearPartcd() {
        copyOnWrite();
        instance.clearPartcd();
        return this;
      }
      /**
       * <code>optional string partcd = 1;</code>
       */
      public Builder setPartcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPartcdBytes(value);
        return this;
      }

      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public boolean hasDtprcd() {
        return instance.hasDtprcd();
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public java.lang.String getDtprcd() {
        return instance.getDtprcd();
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDtprcdBytes() {
        return instance.getDtprcdBytes();
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public Builder setDtprcd(
          java.lang.String value) {
        copyOnWrite();
        instance.setDtprcd(value);
        return this;
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public Builder clearDtprcd() {
        copyOnWrite();
        instance.clearDtprcd();
        return this;
      }
      /**
       * <code>optional string dtprcd = 2;</code>
       */
      public Builder setDtprcdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDtprcdBytes(value);
        return this;
      }

      /**
       * <code>optional string mater = 3;</code>
       */
      public boolean hasMater() {
        return instance.hasMater();
      }
      /**
       * <code>optional string mater = 3;</code>
       */
      public java.lang.String getMater() {
        return instance.getMater();
      }
      /**
       * <code>optional string mater = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMaterBytes() {
        return instance.getMaterBytes();
      }
      /**
       * <code>optional string mater = 3;</code>
       */
      public Builder setMater(
          java.lang.String value) {
        copyOnWrite();
        instance.setMater(value);
        return this;
      }
      /**
       * <code>optional string mater = 3;</code>
       */
      public Builder clearMater() {
        copyOnWrite();
        instance.clearMater();
        return this;
      }
      /**
       * <code>optional string mater = 3;</code>
       */
      public Builder setMaterBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMaterBytes(value);
        return this;
      }

      /**
       * <code>optional string gsjffs = 4;</code>
       */
      public boolean hasGsjffs() {
        return instance.hasGsjffs();
      }
      /**
       * <code>optional string gsjffs = 4;</code>
       */
      public java.lang.String getGsjffs() {
        return instance.getGsjffs();
      }
      /**
       * <code>optional string gsjffs = 4;</code>
       */
      public com.google.protobuf.ByteString
          getGsjffsBytes() {
        return instance.getGsjffsBytes();
      }
      /**
       * <code>optional string gsjffs = 4;</code>
       */
      public Builder setGsjffs(
          java.lang.String value) {
        copyOnWrite();
        instance.setGsjffs(value);
        return this;
      }
      /**
       * <code>optional string gsjffs = 4;</code>
       */
      public Builder clearGsjffs() {
        copyOnWrite();
        instance.clearGsjffs();
        return this;
      }
      /**
       * <code>optional string gsjffs = 4;</code>
       */
      public Builder setGsjffsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGsjffsBytes(value);
        return this;
      }

      /**
       * <code>optional string cljffs = 5;</code>
       */
      public boolean hasCljffs() {
        return instance.hasCljffs();
      }
      /**
       * <code>optional string cljffs = 5;</code>
       */
      public java.lang.String getCljffs() {
        return instance.getCljffs();
      }
      /**
       * <code>optional string cljffs = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCljffsBytes() {
        return instance.getCljffsBytes();
      }
      /**
       * <code>optional string cljffs = 5;</code>
       */
      public Builder setCljffs(
          java.lang.String value) {
        copyOnWrite();
        instance.setCljffs(value);
        return this;
      }
      /**
       * <code>optional string cljffs = 5;</code>
       */
      public Builder clearCljffs() {
        copyOnWrite();
        instance.clearCljffs();
        return this;
      }
      /**
       * <code>optional string cljffs = 5;</code>
       */
      public Builder setCljffsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCljffsBytes(value);
        return this;
      }

      /**
       * <code>optional string ctnope = 6;</code>
       */
      public boolean hasCtnope() {
        return instance.hasCtnope();
      }
      /**
       * <code>optional string ctnope = 6;</code>
       */
      public java.lang.String getCtnope() {
        return instance.getCtnope();
      }
      /**
       * <code>optional string ctnope = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCtnopeBytes() {
        return instance.getCtnopeBytes();
      }
      /**
       * <code>optional string ctnope = 6;</code>
       */
      public Builder setCtnope(
          java.lang.String value) {
        copyOnWrite();
        instance.setCtnope(value);
        return this;
      }
      /**
       * <code>optional string ctnope = 6;</code>
       */
      public Builder clearCtnope() {
        copyOnWrite();
        instance.clearCtnope();
        return this;
      }
      /**
       * <code>optional string ctnope = 6;</code>
       */
      public Builder setCtnopeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCtnopeBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bean.DcoldCtnRepairCD)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD other = (com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD) arg1;
          partcd_ = visitor.visitString(
              hasPartcd(), partcd_,
              other.hasPartcd(), other.partcd_);
          dtprcd_ = visitor.visitString(
              hasDtprcd(), dtprcd_,
              other.hasDtprcd(), other.dtprcd_);
          mater_ = visitor.visitString(
              hasMater(), mater_,
              other.hasMater(), other.mater_);
          gsjffs_ = visitor.visitString(
              hasGsjffs(), gsjffs_,
              other.hasGsjffs(), other.gsjffs_);
          cljffs_ = visitor.visitString(
              hasCljffs(), cljffs_,
              other.hasCljffs(), other.cljffs_);
          ctnope_ = visitor.visitString(
              hasCtnope(), ctnope_,
              other.hasCtnope(), other.ctnope_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  partcd_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  dtprcd_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  mater_ = s;
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  gsjffs_ = s;
                  break;
                }
                case 42: {
                  String s = input.readString();
                  bitField0_ |= 0x00000010;
                  cljffs_ = s;
                  break;
                }
                case 50: {
                  String s = input.readString();
                  bitField0_ |= 0x00000020;
                  ctnope_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:bean.DcoldCtnRepairCD)
    private static final com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DcoldCtnRepairCD();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.centling.protobuf.RepairCodeProto.DcoldCtnRepairCD getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DcoldCtnRepairCD> PARSER;

    public static com.google.protobuf.Parser<DcoldCtnRepairCD> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DctnScdmtpNMOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bean.DctnScdmtpNM)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string ctnope = 1;</code>
     */
    boolean hasCtnope();
    /**
     * <code>optional string ctnope = 1;</code>
     */
    java.lang.String getCtnope();
    /**
     * <code>optional string ctnope = 1;</code>
     */
    com.google.protobuf.ByteString
        getCtnopeBytes();

    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    boolean hasScdmtpname();
    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    java.lang.String getScdmtpname();
    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    com.google.protobuf.ByteString
        getScdmtpnameBytes();
  }
  /**
   * Protobuf type {@code bean.DctnScdmtpNM}
   */
  public  static final class DctnScdmtpNM extends
      com.google.protobuf.GeneratedMessageLite<
          DctnScdmtpNM, DctnScdmtpNM.Builder> implements
      // @@protoc_insertion_point(message_implements:bean.DctnScdmtpNM)
      DctnScdmtpNMOrBuilder {
    private DctnScdmtpNM() {
      ctnope_ = "";
      scdmtpname_ = "";
    }
    private int bitField0_;
    public static final int CTNOPE_FIELD_NUMBER = 1;
    private java.lang.String ctnope_;
    /**
     * <code>optional string ctnope = 1;</code>
     */
    public boolean hasCtnope() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    public java.lang.String getCtnope() {
      return ctnope_;
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCtnopeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ctnope_);
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    private void setCtnope(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ctnope_ = value;
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    private void clearCtnope() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ctnope_ = getDefaultInstance().getCtnope();
    }
    /**
     * <code>optional string ctnope = 1;</code>
     */
    private void setCtnopeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ctnope_ = value.toStringUtf8();
    }

    public static final int SCDMTPNAME_FIELD_NUMBER = 2;
    private java.lang.String scdmtpname_;
    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    public boolean hasScdmtpname() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    public java.lang.String getScdmtpname() {
      return scdmtpname_;
    }
    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    public com.google.protobuf.ByteString
        getScdmtpnameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(scdmtpname_);
    }
    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    private void setScdmtpname(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      scdmtpname_ = value;
    }
    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    private void clearScdmtpname() {
      bitField0_ = (bitField0_ & ~0x00000002);
      scdmtpname_ = getDefaultInstance().getScdmtpname();
    }
    /**
     * <code>optional string scdmtpname = 2;</code>
     */
    private void setScdmtpnameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      scdmtpname_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getCtnope());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getScdmtpname());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getCtnope());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getScdmtpname());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.centling.protobuf.RepairCodeProto.DctnScdmtpNM prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code bean.DctnScdmtpNM}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.centling.protobuf.RepairCodeProto.DctnScdmtpNM, Builder> implements
        // @@protoc_insertion_point(builder_implements:bean.DctnScdmtpNM)
        com.centling.protobuf.RepairCodeProto.DctnScdmtpNMOrBuilder {
      // Construct using com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string ctnope = 1;</code>
       */
      public boolean hasCtnope() {
        return instance.hasCtnope();
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public java.lang.String getCtnope() {
        return instance.getCtnope();
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCtnopeBytes() {
        return instance.getCtnopeBytes();
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public Builder setCtnope(
          java.lang.String value) {
        copyOnWrite();
        instance.setCtnope(value);
        return this;
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public Builder clearCtnope() {
        copyOnWrite();
        instance.clearCtnope();
        return this;
      }
      /**
       * <code>optional string ctnope = 1;</code>
       */
      public Builder setCtnopeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCtnopeBytes(value);
        return this;
      }

      /**
       * <code>optional string scdmtpname = 2;</code>
       */
      public boolean hasScdmtpname() {
        return instance.hasScdmtpname();
      }
      /**
       * <code>optional string scdmtpname = 2;</code>
       */
      public java.lang.String getScdmtpname() {
        return instance.getScdmtpname();
      }
      /**
       * <code>optional string scdmtpname = 2;</code>
       */
      public com.google.protobuf.ByteString
          getScdmtpnameBytes() {
        return instance.getScdmtpnameBytes();
      }
      /**
       * <code>optional string scdmtpname = 2;</code>
       */
      public Builder setScdmtpname(
          java.lang.String value) {
        copyOnWrite();
        instance.setScdmtpname(value);
        return this;
      }
      /**
       * <code>optional string scdmtpname = 2;</code>
       */
      public Builder clearScdmtpname() {
        copyOnWrite();
        instance.clearScdmtpname();
        return this;
      }
      /**
       * <code>optional string scdmtpname = 2;</code>
       */
      public Builder setScdmtpnameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setScdmtpnameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bean.DctnScdmtpNM)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.centling.protobuf.RepairCodeProto.DctnScdmtpNM();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.centling.protobuf.RepairCodeProto.DctnScdmtpNM other = (com.centling.protobuf.RepairCodeProto.DctnScdmtpNM) arg1;
          ctnope_ = visitor.visitString(
              hasCtnope(), ctnope_,
              other.hasCtnope(), other.ctnope_);
          scdmtpname_ = visitor.visitString(
              hasScdmtpname(), scdmtpname_,
              other.hasScdmtpname(), other.scdmtpname_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  ctnope_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  scdmtpname_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.centling.protobuf.RepairCodeProto.DctnScdmtpNM.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:bean.DctnScdmtpNM)
    private static final com.centling.protobuf.RepairCodeProto.DctnScdmtpNM DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DctnScdmtpNM();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.centling.protobuf.RepairCodeProto.DctnScdmtpNM getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DctnScdmtpNM> PARSER;

    public static com.google.protobuf.Parser<DctnScdmtpNM> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
